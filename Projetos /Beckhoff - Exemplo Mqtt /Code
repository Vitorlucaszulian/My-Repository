------------------ declaração de variaveis ------------------
PROGRAM MqttProgram
VAR
	fbMqttClient  	: FB_IotMqttClient;
	bSetParameter	: BOOL := TRUE; 
	bConnect		: BOOL := TRUE; 
	
	(* Publish mensage *)
	sTopicPub		: STRING(255) := 'my topic';
	sPayloadPub		: STRING(255);
	i				: UDINT;
	fbTimer			: TON := (PT := T#1S);
	
	
	(*Received mensage *)
	bSubscribed 	: BOOL; 
	sTopicSub		: STRING(255) := 'my Topic';
	{attribute 'TcEncoding':='UTF-8'}
	sTopicRcv : STRING(255);
	{attribute 'TcEncoding':='UTF-8'}
	sPayloadRcv : STRING(255);
	fbMessageQueue : FB_IotMqttMessageQueue;
	fbMessage : FB_IotMqttMessage;
	
	hrErrorOccurred : HRESULT; // contains the latest occurred error
		 
END_VAR


------------------ MqttProgram ------------------

IF bSetParameter THEN 
	bSetParameter := FALSE;
	
	fbMqttClient.stTLS.sCA := 'c:\Temp\cert\fullChain.pem';
    fbMqttClient.stTLS.sCert := 'c:\Temp\cert\CX7000.pem';
    fbMqttClient.stTLS.sKeyFile := 'c:\Temp\cert\CX7000.key';
	
	fbMqttClient.sHostName:= // adicionar o seu ip ; 
	fbMqttClient.nHostPort:= 8883;
	fbMqttClient.ipMessageQueue := fbMessageQueue;
END_IF

fbMqttClient.Execute(bConnect);

IF fbMqttClient.bError THEN
	
	//adicionar um retorno do erro aqui posteriormente
	hrErrorOccurred := fbMqttClient.hrErrorCode;
	
END_IF

IF fbMessageQueue.nQueuedMessages > 0 THEN
	IF fbMessageQueue.Dequeue(fbMessage:=fbMessage) THEN
		fbMessage.GetTopic(pTopic:=ADR(sTopicRcv), nTopicSize:=SIZEOF(sTopicRcv) );
		fbMessage.GetPayload(pPayload:=ADR(sPayloadRcv), nPayloadSize:=SIZEOF(sPayloadRcv), bSetNullTermination:=FALSE);
	END_IF
END_IF

IF fbMqttClient.bConnected THEN
	IF NOT bSubscribed THEN
		bSubscribed := fbMqttClient.Subscribe(sTopic:=sTopicSub, eQoS:=TcIotMqttQos.AtMostOnceDelivery);
		IF fbMqttClient.bError THEN
			// add your error logging here
			hrErrorOccurred := fbMqttClient.hrErrorCode;
		END_IF
	END_IF
	fbTimer(IN:=TRUE);
	IF fbTimer.Q THEN // publish new payload every second
		fbTimer(IN:=FALSE);
		i := i + 1;
		sPayloadPub := CONCAT('MyMessage', TO_STRING(i));
		fbMqttClient.Publish(	sTopic:= sTopicPub, 
								pPayload:= ADR(sPayloadPub), nPayloadSize:= LEN2(ADR(sPayloadPub))+1, 
								eQoS:= TcIotMqttQos.AtMostOnceDelivery, bRetain:= FALSE, bQueue:= FALSE );
		IF fbMqttClient.bError THEN
			// add your error logging here
			hrErrorOccurred := fbMqttClient.hrErrorCode;
		END_IF
	END_IF
END_IF
